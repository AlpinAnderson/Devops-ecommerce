name: Backend CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'app/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'app/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        pip install pytest
      
    - name: Run tests
      run: |
        cd app
        python -m pytest
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/ddice-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/ddice-backend:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ddice-backend:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/ddice-backend:buildcache,mode=max
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Setup Kubernetes credentials
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
        
    - name: Verify Kubernetes connection
      run: |
        kubectl cluster-info
        kubectl get nodes
        
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/backend-deployment.yaml
        kubectl set image deployment/backend-deployment backend=${{ secrets.DOCKER_USERNAME }}/ddice-backend:${{ github.sha }}
        kubectl rollout status deployment/backend-deployment